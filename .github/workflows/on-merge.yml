name: on-merge
on:
  push:
    branches:
      - main
      - develop

env:
  PNPM_VERSION: 9.5.0

concurrency:
  group: ${{ github.workflow }}-origin/${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Run test
        run: pnpm test
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  storybook:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Run chromatic
        uses: chromaui/action@latest
        with:
          token: ${{ github.token }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN_STORYBOOK }}
          skip: 'dependabot/**'

  playwright:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
      - name: Playwright tests
        env:
          X_API_KEY: ${{ secrets.X_API_KEY }}
        run: pnpm exec playwright test
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: ./test-results
          retention-days: 30

  playwright-report:
    runs-on: ubuntu-latest
    needs: playwright
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Download Playwright report
        uses: actions/download-artifact@v4
        with:
          name: test-results
          path: ./test-results
      - name: Run chromatic
        uses: chromaui/action@latest
        with:
          playwright: true
          token: ${{ github.token }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN_PLAYWRIGHT }}
          skip: 'dependabot/**'
